"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compensatePaymentIfNeededStep = exports.compensatePaymentIfNeededStepId = void 0;
const workflows_sdk_1 = require("@medusajs/framework/workflows-sdk");
const utils_1 = require("@medusajs/framework/utils");
const utils_2 = require("@medusajs/framework/utils");
exports.compensatePaymentIfNeededStepId = "compensate-payment-if-needed";
/**
 * Purpose of this step is to be the last compensation in cart completion workflow.
 * If the cart completion fails, this step tries to cancel or refund the payment.
 *
 * @example
 * const data = compensatePaymentIfNeededStep({
 *   payment_session_id: "pay_123"
 * })
 */
exports.compensatePaymentIfNeededStep = (0, workflows_sdk_1.createStep)(exports.compensatePaymentIfNeededStepId, async (data, { container }) => {
    const { payment_session_id } = data;
    return new workflows_sdk_1.StepResponse(payment_session_id);
}, async (paymentSessionId, { container }) => {
    if (!paymentSessionId) {
        return;
    }
    const logger = container.resolve(utils_1.ContainerRegistrationKeys.LOGGER);
    const paymentModule = container.resolve(utils_2.Modules.PAYMENT);
    const paymentSession = await paymentModule.retrievePaymentSession(paymentSessionId, {
        relations: ["payment"],
    });
    if (paymentSession.status === utils_1.PaymentSessionStatus.AUTHORIZED) {
        try {
            await paymentModule.cancelPayment(paymentSession.id);
        }
        catch (e) {
            logger.error(`Error was thrown trying to cancel payment session - ${paymentSession.id} - ${e}`);
        }
    }
    if (paymentSession.status === utils_1.PaymentSessionStatus.CAPTURED &&
        paymentSession.payment?.id) {
        try {
            await paymentModule.refundPayment({
                payment_id: paymentSession.payment.id,
                note: "Refunded due to cart completion failure",
            });
        }
        catch (e) {
            logger.error(`Error was thrown trying to refund payment - ${paymentSession.payment?.id} - ${e}`);
        }
    }
});
//# sourceMappingURL=compensate-payment-if-needed.js.map